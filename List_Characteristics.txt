 |  append(self, object, /) ---------------------------------------------->Done
 |      Append object to the end of the list.
 |  
 |  clear(self, /)
 |      Remove all items from list.
 |  
 |  copy(self, /)--------------------------------------------------------> Yet to be Done
 |      Return a shallow copy of the list.
 |  
 |  count(self, value, /) ----------------------------------------------->Yet to done
 |      Return number of occurrences of value.
 |  
 |  extend(self, iterable, /)--------------------------------------------> Done
 |      Extend list by appending elements from the iterable.
 |  
 |  index(self, value, start=0, stop=9223372036854775807, /)------------> Done
 |      Return first index of value.
 |      
 |      Raises ValueError if the value is not present.
 |  
 |  insert(self, index, object, /)-------------------------------------->Yet to be done
 |      Insert object before index.
 |  
 |  pop(self, index=-1, /)---------------------------------------------->Yet to be done
 |      Remove and return item at index (default last).
 |      
 |      Raises IndexError if list is empty or index is out of range.
 |  
 |  remove(self, value, /)--------------------------------------------->Partialy done,(TUPLE type is not supported)
 |      Remove first occurrence of value.
 |      
 |      Raises ValueError if the value is not present.
 |  
 |  reverse(self, /)-------------------------------------------------->Yet to be done
 |      Reverse *IN PLACE*.
 |  
 |  sort(self, /, *, key=None, reverse=False)------------------------>Yet to be done
 |      Sort the list in ascending order and return None.
 |      
 |      The sort is in-place (i.e. the list itself is modified) and stable (i.e. the
 |      order of two equal elements is maintained).
 |      
 |      If a key function is given, apply it once to each list item and sort them,
 |      ascending or descending, according to their function values.
 |      
 |      The reverse flag can be set to sort in descending order.
